package forHonor;

import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

public class DBMetodes implements ConnectInterface {

	public Connection connect() throws SQLException {
		Connection conn = DriverManager.getConnection(connection);
		return conn;
	}

	public void inicialitza() throws SQLException {
		String creaTaulaFaccion = "CREATE TABLE IF NOT EXISTS faccion (" + "faccion_id INTEGER PRIMARY KEY,"
				+ "nombre_faccion VARCHAR(15)," + "lore VARCHAR(200)" + ");";
		Statement stmnt = connect().createStatement();
		stmnt.execute(creaTaulaFaccion);

		String creaTaulaPersonaje = "CREATE TABLE IF NOT EXISTS personaje (personaje_id INTEGER PRIMARY KEY,"
				+ "nombre_personaje VARCHAR(15)," + "ataque INTEGER," + "defensa INTEGER," + "faccion_id INTEGER,"
				+ "FOREIGN KEY (faccion_id) REFERENCES faccion(faccion_id)" + ");";
		stmnt.execute(creaTaulaPersonaje);
		creaPrimeresFaccions();
		creaPrimersPersonatges();
	}

	public void creaPrimeresFaccions() throws SQLException {
		String lore, insertaDadesFaccions;
		Statement stmnt = connect().createStatement();
		lore = "Los caballeros de Ashfeld son paradigmas del poder. La Legión de Hierro los envió para llevar la paz a esas tierras. Desde entonces disfrutan de la libertad y han hecho de Ashfeld su hogar.";
		insertaDadesFaccions = "INSERT INTO faccion VALUES(1, 'Caballeros', '" + lore + "');";
		stmnt.execute(insertaDadesFaccions);

		lore = "Los vikingos desaparecieron hace siglos, tras escapar de sus derruidas tierras natales en busca de costas desconocidas. Los caballeros conquistaron a aquellos que se quedaron atrás y los incorporaron a su cultura.";
		insertaDadesFaccions = "INSERT INTO faccion VALUES(2, 'Vikingos', '" + lore + "');";
		stmnt.execute(insertaDadesFaccions);

		lore = "La historia no ha sido amable con los samuráis. Originarios de una tierra muy lejana, allende los mares, cuentan la historia de un emperador y una patria que desaparecieron entre el mar y el fuego.";
		insertaDadesFaccions = "INSERT INTO faccion VALUES(3, 'Samuráis', '" + lore + "');";
		stmnt.execute(insertaDadesFaccions);

		lore = "Los Wu Lin son una facción de guerreros del interior de las murallas de la antigua China. Ahora, cuatro guerreros Wu Lin viajan al oeste en busca de venganza por las guerras, las traiciones y las tragedias personales. Combaten para reclamar su sitio en la próxima dinastía.";
		insertaDadesFaccions = "INSERT INTO faccion VALUES(4, 'Wu Lin', '" + lore + "');";
		stmnt.execute(insertaDadesFaccions);
	}

	public void creaPrimersPersonatges() throws SQLException {
		Statement stmnt = connect().createStatement();
		String insertaDadesPersonatge;
		
		insertaDadesPersonatge = "INSERT INTO personaje VALUES (1, 'Aramusha', 35, 20, 3);";
		stmnt.execute(insertaDadesPersonatge);

		insertaDadesPersonatge = "INSERT INTO personaje VALUES (2, 'Orochi', 80, 45, 3);";
		stmnt.execute(insertaDadesPersonatge);

		insertaDadesPersonatge = "INSERT INTO personaje VALUES (3, 'Berserker', 30, 30, 2);";
		stmnt.execute(insertaDadesPersonatge);

		insertaDadesPersonatge = "INSERT INTO personaje VALUES (4, 'The Raider', 100, 95, 2);";
		stmnt.execute(insertaDadesPersonatge);

		insertaDadesPersonatge = "INSERT INTO personaje VALUES (5, 'The Warden', 90, 120, 1);";
		stmnt.execute(insertaDadesPersonatge);

		insertaDadesPersonatge = "INSERT INTO personaje VALUES (6, 'Ademar', 70, 80, 1);";
		stmnt.execute(insertaDadesPersonatge);

		insertaDadesPersonatge = "INSERT INTO personaje VALUES (7, 'Julius', 80, 105, 1);";
		stmnt.execute(insertaDadesPersonatge);

		insertaDadesPersonatge = "INSERT INTO personaje VALUES (8, 'Shidou', 50, 40, 4);";
		stmnt.execute(insertaDadesPersonatge);

		insertaDadesPersonatge = "INSERT INTO personaje VALUES (9, 'Wei Chang', 70, 55, 4);";
		stmnt.execute(insertaDadesPersonatge);
	}

	public boolean tableExists() throws SQLException {
		ResultSet rs;
		DatabaseMetaData dbMeta = connect().getMetaData();
		String[] types = { "TABLE" };
		rs = dbMeta.getTables("", "", "faccion", types);
		if (rs.next()) {
			return true;
		}
		return false;
	}

	public Main retornaObjectes() throws SQLException {
		Main m = new Main();
		ArrayList<Faccion> aLF = new ArrayList<Faccion>();
		Faccion f;
		ArrayList<Personaje> aLP = new ArrayList<Personaje>();
		Personaje p;
		String select;
		ResultSet rs;
		Statement stmnt = connect().createStatement();

		select = "SELECT * FROM faccion";
		rs = stmnt.executeQuery(select);
		while (rs.next()) {
			f = new Faccion();
			f.setId(rs.getInt("faccion_id"));
			f.setNombre(rs.getString("nombre_faccion"));
			f.setLore(rs.getString("lore"));
			aLF.add(f);
		}
		m.setFacciones(aLF);

		select = "SELECT * FROM personaje";
		rs = stmnt.executeQuery(select);
		while (rs.next()) {
			p = new Personaje();
			p.setId(rs.getInt("personaje_id"));
			p.setNombre(rs.getString("nombre_personaje"));
			p.setAtaque(rs.getInt("ataque"));
			p.setDefensa(rs.getInt("defensa"));
			p.setFaccion_id(rs.getInt("faccion_id"));
			aLP.add(p);
		}
		m.setPersonajes(aLP);
		return m;
	}

	public void insertaNuevaFaccion(Faccion f) throws SQLException {
		String insertaDatosFaccion;
		Statement stmnt = connect().createStatement();
		insertaDatosFaccion = "INSERT INTO faccion VALUES(" + f.getId() + ", '" + f.getNombre() + "', '" + f.getLore()
				+ "');";
		stmnt.execute(insertaDatosFaccion);
	}

	public void insertaNuevoPersonaje(Personaje p) throws SQLException {
		String insertaDatosPersonaje;
		Statement stmnt = connect().createStatement();
		insertaDatosPersonaje = "INSERT INTO faccion VALUES(" + p.getId() + ", '" + p.getNombre() + "', "
				+ p.getAtaque() + ", " + p.getDefensa() + ", " + p.getFaccion_id() + ");";
		stmnt.execute(insertaDatosPersonaje);
	}
	
	public void muestraCaballeros() throws SQLException {
		ResultSet rs;
		String select;
		select = "SELECT personaje_id, nombre_personaje, ataque, defensa, faccion_id FROM personaje WHERE faccion_id = (SELECT faccion_id FROM faccion WHERE LOWER(nombre_faccion) = 'caballero')";
		// select = "SELECT * FROM personaje";
		Statement stmnt;
		stmnt = connect().createStatement();
		rs = stmnt.executeQuery(select);
		while(rs.next()) {
			System.out.println("ID del personaje: " + rs.getInt("personaje_id"));
			System.out.println("Nombre del personaje: " + rs.getString("nombre_personaje"));
			System.out.println("Ataque del personaje: " + rs.getInt("ataque"));
			System.out.println("Defensa del personaje: " + rs.getInt("defensa"));
			System.out.println("ID de la faccion caballeros: " + rs.getInt("faccion_id"));
		}
	}
	
	public void muestraSamuraiMasAtaque() throws SQLException {
		ResultSet rs;
		String select;
		select = "SELECT personaje_id, nombre_personaje, ataque, defensa, faccion_id FROM personaje WHERE faccion_id = (SELECT faccion_id FROM faccion WHERE LOWER(nombre_faccion) = 'samurai') AND ataque = (SELECT max(ataque) FROM personaje WHERE faccion_id = (SELECT faccion_id FROM faccion WHERE LOWER(nombre_faccion) = 'samurai'))";
		Statement stmnt;
		stmnt = connect().createStatement();
		rs = stmnt.executeQuery(select);
		while(rs.next()) {
			System.out.println("ID del personaje: " + rs.getInt("personaje_id"));
			System.out.println("Nombre del personaje: " + rs.getString("nombre_personaje"));
			System.out.println("Ataque del personaje: " + rs.getInt("ataque"));
			System.out.println("Defensa del personaje: " + rs.getInt("defensa"));
			System.out.println("ID de la faccion samurais: " + rs.getInt("faccion_id"));
		}
	}
}
